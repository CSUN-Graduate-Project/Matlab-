function [t_s, b_s, t_ns, b_ns, ...
          e_s, b_e_s, e_ns, b_e_ns, ...
          h_s, b_h_s, h_ns, b_h_ns] ...
          = preprocess_last(pickle_data_s2, pickle_data_s3, ...
                            pickle_data_s4, pickle_data_s5, ...
                            pickle_data_s6, pickle_data_s7, ...
                            pickle_data_s8, pickle_data_s9, ...
                            pickle_data_s10, pickle_data_s11, ...
                            pickle_data_s13, pickle_data_s14, ...
                            pickle_data_s15, pickle_data_s16, ...
                            pickle_data_s17)
      
%function combines 2 structs to output probabilites
                         
[data_temp_s2,freq_temp_s2,data_temp_ns2,freq_temp_ns2,... temp
data_eda_s2, freq_eda_s2, data_eda_ns2, freq_eda_ns2,... eda
data_hr_s2, freq_hr_s2, data_hr_ns2, freq_hr_ns2] = preprocess2(pickle_data_s2);                         
                         
[data_temp_s3,freq_temp_s3,data_temp_ns3,freq_temp_ns3,... temp
data_eda_s3, freq_eda_s3, data_eda_ns3, freq_eda_ns3,... eda
data_hr_s3, freq_hr_s3, data_hr_ns3, freq_hr_ns3] = preprocess2(pickle_data_s3);

[data_temp_s4,freq_temp_s4,data_temp_ns4,freq_temp_ns4,... temp
data_eda_s4, freq_eda_s4, data_eda_ns4, freq_eda_ns4,... eda
data_hr_s4, freq_hr_s4, data_hr_ns4, freq_hr_ns4] = preprocess2(pickle_data_s4);
      
[data_temp_s5,freq_temp_s5,data_temp_ns5,freq_temp_ns5,... temp
data_eda_s5, freq_eda_s5, data_eda_ns5, freq_eda_ns5,... eda
data_hr_s5, freq_hr_s5, data_hr_ns5, freq_hr_ns5] = preprocess2(pickle_data_s5);

[data_temp_s6,freq_temp_s6,data_temp_ns6,freq_temp_ns6,... temp
data_eda_s6, freq_eda_s6, data_eda_ns6, freq_eda_ns6,... eda
data_hr_s6, freq_hr_s6, data_hr_ns6, freq_hr_ns6] = preprocess2(pickle_data_s6);

[data_temp_s7,freq_temp_s7,data_temp_ns7,freq_temp_ns7,... temp
data_eda_s7, freq_eda_s7, data_eda_ns7, freq_eda_ns7,... eda
data_hr_s7, freq_hr_s7, data_hr_ns7, freq_hr_ns7] = preprocess2(pickle_data_s7);

[data_temp_s8,freq_temp_s8,data_temp_ns8,freq_temp_ns8,... temp
data_eda_s8, freq_eda_s8, data_eda_ns8, freq_eda_ns8,... eda
data_hr_s8, freq_hr_s8, data_hr_ns8, freq_hr_ns8] = preprocess2(pickle_data_s8);

[data_temp_s9,freq_temp_s9,data_temp_ns9,freq_temp_ns9,... temp
data_eda_s9, freq_eda_s9, data_eda_ns9, freq_eda_ns9,... eda
data_hr_s9, freq_hr_s9, data_hr_ns9, freq_hr_ns9] = preprocess2(pickle_data_s9);

[data_temp_s10,freq_temp_s10,data_temp_ns10,freq_temp_ns10,... temp
data_eda_s10, freq_eda_s10, data_eda_ns10, freq_eda_ns10,... eda
data_hr_s10, freq_hr_s10, data_hr_ns10, freq_hr_ns10] = preprocess2(pickle_data_s10);

[data_temp_s11,freq_temp_s11,data_temp_ns11,freq_temp_ns11,... temp
data_eda_s11, freq_eda_s11, data_eda_ns11, freq_eda_ns11,... eda
data_hr_s11, freq_hr_s11, data_hr_ns11, freq_hr_ns11] = preprocess2(pickle_data_s11);

[data_temp_s13,freq_temp_s13,data_temp_ns13,freq_temp_ns13,... temp
data_eda_s13, freq_eda_s13, data_eda_ns13, freq_eda_ns13,... eda
data_hr_s13, freq_hr_s13, data_hr_ns13, freq_hr_ns13] = preprocess2(pickle_data_s13);

[data_temp_s14,freq_temp_s14,data_temp_ns14,freq_temp_ns14,... temp
data_eda_s14, freq_eda_s14, data_eda_ns14, freq_eda_ns14,... eda
data_hr_s14, freq_hr_s14, data_hr_ns14, freq_hr_ns14] = preprocess2(pickle_data_s14);

[data_temp_s15,freq_temp_s15,data_temp_ns15,freq_temp_ns15,... temp
data_eda_s15, freq_eda_s15, data_eda_ns15, freq_eda_ns15,... eda
data_hr_s15, freq_hr_s15, data_hr_ns15, freq_hr_ns15] = preprocess2(pickle_data_s15);

[data_temp_s16,freq_temp_s16,data_temp_ns16,freq_temp_ns16,... temp
data_eda_s16, freq_eda_s16, data_eda_ns16, freq_eda_ns16,... eda
data_hr_s16, freq_hr_s16, data_hr_ns16, freq_hr_ns16] = preprocess2(pickle_data_s16);

[data_temp_s17,freq_temp_s17,data_temp_ns17,freq_temp_ns17,... temp
data_eda_s17, freq_eda_s17, data_eda_ns17, freq_eda_ns17,... eda
data_hr_s17, freq_hr_s17, data_hr_ns17, freq_hr_ns17] = preprocess2(pickle_data_s17);

  
% ----------------------------------------------------------------------------------------
% Format of this data should be column 0 is the data points
% Column 1 should be the frequency



temp_s = combine_rows(data_temp_s2, freq_temp_s2,data_temp_s3, freq_temp_s3,...
data_temp_s4, freq_temp_s4,...
data_temp_s5, freq_temp_s5,...
data_temp_s6, freq_temp_s6,...
data_temp_s7, freq_temp_s7,...
data_temp_s8, freq_temp_s8,...
data_temp_s9, freq_temp_s9,...
data_temp_s10, freq_temp_s10,...
data_temp_s11, freq_temp_s11,...
data_temp_s13, freq_temp_s13,...
data_temp_s14, freq_temp_s14,...
data_temp_s15, freq_temp_s15,...
data_temp_s16, freq_temp_s16,...
data_temp_s17, freq_temp_s17);

temp_ns = combine_rows(data_temp_ns2, freq_temp_ns2,data_temp_ns3, freq_temp_ns3,...
data_temp_ns4, freq_temp_ns4,...
data_temp_ns5, freq_temp_ns5,...
data_temp_ns6, freq_temp_ns6,...
data_temp_ns7, freq_temp_ns7,...
data_temp_ns8, freq_temp_ns8,...
data_temp_ns9, freq_temp_ns9,...
data_temp_ns10, freq_temp_ns10,...
data_temp_ns11, freq_temp_ns11,...
data_temp_ns13, freq_temp_ns13,...
data_temp_ns14, freq_temp_ns14,...
data_temp_ns15, freq_temp_ns15,...
data_temp_ns16, freq_temp_ns16,...
data_temp_ns17, freq_temp_ns17);

% find optimal pad value
pad_t_s = round(sum(temp_s(:, [2]))/10000);
pad_t_ns = round(sum(temp_ns(:, [2]))/10000);

% pad frequencies
temp_s(:, [2]) = temp_s(:, [2]) + pad_t_s;
temp_ns(:, [2]) = temp_ns(:, [2]) + pad_t_ns;

% obtain scaled probablities
p_s = round(temp_s(:, [2])*(10000/sum(temp_s(:, [2]))));
p_ns = round(temp_ns(:, [2])*(10000/sum(temp_ns(:, [2]))));

% obtain binary representation of probabilities
b_s = dec2bin(p_s);
b_ns = dec2bin(p_ns);

%multiply by 8 to left shift by 3
%31.625(in binary) -> 31625(in binary)
t_s = dec2bin(temp_s(:, [1]).*8);
t_ns = dec2bin(temp_ns(:, [1]).*8);

% ----------------------------------------------------------------------------------------

%eda_s = combine_rows(data_eda_s2, freq_eda_s2,data_eda_s3, freq_eda_s3);
eda_s = combine_rows(data_eda_s2, freq_eda_s2,data_eda_s3, freq_eda_s3,...
data_eda_s4, freq_eda_s4,...
data_eda_s5, freq_eda_s5,...
data_eda_s6, freq_eda_s6,...
data_eda_s7, freq_eda_s7,...
data_eda_s8, freq_eda_s8,...
data_eda_s9, freq_eda_s9,...
data_eda_s10, freq_eda_s10,...
data_eda_s11, freq_eda_s11,...
data_eda_s13, freq_eda_s13,...
data_eda_s14, freq_eda_s14,...
data_eda_s15, freq_eda_s15,...
data_eda_s16, freq_eda_s16,...
data_eda_s17, freq_eda_s17);

%eda_ns = combine_rows(data_eda_ns2, freq_eda_ns2,data_eda_ns3, freq_eda_ns3);

eda_ns = combine_rows(data_eda_ns2, freq_eda_ns2, data_eda_ns3, freq_eda_ns3,...
data_eda_ns4, freq_eda_ns4,...
data_eda_ns5, freq_eda_ns5,...
data_eda_ns6, freq_eda_ns6,...
data_eda_ns7, freq_eda_ns7,...
data_eda_ns8, freq_eda_ns8,...
data_eda_ns9, freq_eda_ns9,...
data_eda_ns10, freq_eda_ns10,...
data_eda_ns11, freq_eda_ns11,...
data_eda_ns13, freq_eda_ns13,...
data_eda_ns14, freq_eda_ns14,...
data_eda_ns15, freq_eda_ns15,...
data_eda_ns16, freq_eda_ns16,...
data_eda_ns17, freq_eda_ns17);

% find optimal pad value
pad_e_s = round(sum(eda_s(:, [2]))/10000);
pad_e_ns = round(sum(eda_ns(:, [2]))/10000);

% pad frequencies
eda_s(:, [2]) = eda_s(:, [2]) + pad_e_s;
eda_ns(:, [2]) = eda_ns(:, [2]) + pad_e_ns;

% obtain scaled probablities
p_e_s = round(eda_s(:, [2])*(10000/sum(eda_s(:, [2]))));
p_e_ns = round(eda_ns(:, [2])*(10000/sum(eda_ns(:, [2]))));

% obtain binary representation of probabilities
b_e_s = dec2bin(p_e_s);
b_e_ns = dec2bin(p_e_ns);

e_s = dec2bin(eda_s(:, [1]).*8);
e_ns = dec2bin(eda_ns(:, [1]).*8);


% ----------------------------------------------------------------------------------------

%hr_s = combine_rows(data_hr_s2, freq_hr_s2,data_hr_s3, freq_hr_s3);

%hr_ns = combine_rows(data_hr_ns2, freq_hr_ns2,data_hr_ns3, freq_hr_ns3);

hr_s = combine_rows(data_hr_s2, freq_hr_s2,data_hr_s3, freq_hr_s3,...
data_hr_s4, freq_hr_s4,...
data_hr_s5, freq_hr_s5,...
data_hr_s6, freq_hr_s6,...
data_hr_s7, freq_hr_s7,...
data_hr_s8, freq_hr_s8,...
data_hr_s9, freq_hr_s9,...
data_hr_s10, freq_hr_s10,...
data_hr_s11, freq_hr_s11,...
data_hr_s13, freq_hr_s13,...
data_hr_s14, freq_hr_s14,...
data_hr_s15, freq_hr_s15,...
data_hr_s16, freq_hr_s16,...
data_hr_s17, freq_hr_s17);

hr_ns = combine_rows(data_hr_ns2, freq_hr_ns2,data_hr_ns3, freq_hr_ns3,...
data_hr_ns4, freq_hr_ns4,...
data_hr_ns5, freq_hr_ns5,...
data_hr_ns6, freq_hr_ns6,...
data_hr_ns7, freq_hr_ns7,...
data_hr_ns8, freq_hr_ns8,...
data_hr_ns9, freq_hr_ns9,...
data_hr_ns10, freq_hr_ns10,...
data_hr_ns11, freq_hr_ns11,...
data_hr_ns13, freq_hr_ns13,...
data_hr_ns14, freq_hr_ns14,...
data_hr_ns15, freq_hr_ns15,...
data_hr_ns16, freq_hr_ns16,...
data_hr_ns17, freq_hr_ns17);

% find optimal pad value
pad_h_s = round(sum(hr_s(:, [2]))/10000);
pad_h_ns = round(sum(hr_ns(:, [2]))/10000);

% pad frequencies
hr_s(:, [2]) = hr_s(:, [2]) + pad_h_s;
hr_ns(:, [2]) = hr_ns(:, [2]) + pad_h_ns;

% obtain scaled probablities
p_h_s = round(hr_s(:, [2])*(10000/sum(hr_s(:, [2]))));
p_h_ns = round(hr_ns(:, [2])*(10000/sum(hr_ns(:, [2]))));

% obtain binary representation of probabilities
b_h_s = dec2bin(p_h_s);
b_h_ns = dec2bin(p_h_ns);

h_s = dec2bin(hr_s(:, [1]).*8);
h_ns = dec2bin(hr_ns(:, [1]).*8);

end
